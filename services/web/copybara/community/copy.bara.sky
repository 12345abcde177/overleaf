privateRepo = "git@github.com:overleaf/web-internal.git"
publicRepo = "git@github.com:overleaf/web.git"

everythingExceptPrivateFiles = glob(
    ["**"],
    exclude = [
        "modules/**",
        "app/views/external/**",
        "public/brand/**",
        "copybara/**",
        "config/settings.webpack.js",
        "config/settings.overrides.saas.js",
        "config/settings.overrides.server-pro.js",
        "scripts/fix_account_linkage/**",
        "scripts/translations/uploadNonEnglish.js",
        "scripts/user-export/**",
        ".ssh/**",
        ".github/dependabot.yml",
        "cloudbuild.yaml",
        ".sentryclirc.enc"
    ]
) + glob([
  "modules/launchpad/**",
  "modules/user-activate/**",
  "modules/server-ce-scripts/**",
  "modules/modules-*.js"
])

core.workflow(
    name = "default",
    origin = git.origin(
      url = privateRepo,
      ref = "master"
    ),
    destination = git.destination(
      url = publicRepo,
      fetch = "master",
      push = "master"
    ),
    # Exclude proprietary code and non-local build scripts
    origin_files = everythingExceptPrivateFiles,
    mode="ITERATIVE",
    migrate_noop_changes=True,
    authoring = authoring.pass_thru("Copybot <copybot@overleaf.com>"),
    transformations = [
      metadata.restore_author(label='ORIGINAL_AUTHOR', search_all_changes=True)
    ]
)


# ---- Import a PR from public repo to private ----

titleFormatString = "[Imported] ${GITHUB_PR_TITLE}, (#${GITHUB_PR_NUMBER})"
bodyFormatString = """
Imported from public PR [${GITHUB_PR_NUMBER}](https://github.com/overleaf/web/pull/${GITHUB_PR_NUMBER}).
Original PR opened by ${GITHUB_PR_USER}

----

${GITHUB_PR_BODY}
"""

core.workflow(
    name = "importPullRequest",
    origin = git.github_pr_origin(
        url = publicRepo
    ),
    destination = git.github_pr_destination(
        url = privateRepo,
        integrates = [],
        pr_branch = "import_public_pr_${CONTEXT_REFERENCE}",
        title = titleFormatString,
        body = bodyFormatString
    ),
    mode = "CHANGE_REQUEST",
    set_rev_id = False,

    origin_files = glob(["**"]),

    # Same as origin_files in the default workflow,
    # without this here a PR will delete the excluded files from
    # the private repo.
    destination_files = everythingExceptPrivateFiles,

    authoring = authoring.pass_thru("Overleaf CopyBot <copybot@overleaf.com>"),
    transformations = [
      metadata.save_author(),
      metadata.expose_label("COPYBARA_INTEGRATE_REVIEW"),
      metadata.expose_label("GITHUB_PR_NUMBER", new_name ="Closes", separator=" #"),
    ],
)
